var d=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports);var m=d((p,f)=>{var k=(n,e)=>n.includes(e),x=n=>{for(let e of n)if(e!==" ")return!1;return!0},o=n=>!!(n.length&&n[n.length-1]===""),N=n=>{let e=0;for(let s of n)x(s)&&e++;return o(n)&&e>0&&e--,e},w=n=>{let e=0;return n.walkComments(s=>{e+=s.source.end.line-s.source.start.line+1}),e};f.exports={hasSpecifiedValue:k,hasEndNewLine:o,calcBlankLines:N,calcCommentLines:w}});var t=require("stylelint"),{calcBlankLines:B,hasEndNewLine:C,calcCommentLines:V,hasSpecifiedValue:g}=m(),l="plugin/file-max-lines",L=t.utils.ruleMessages(l,{expected:(n,e)=>`File has too many lines (${e}). Maximum allowed is ${n}`}),u=(n,e)=>(s,a)=>{let c=h=>t.utils.validateOptions(a,l,h);if(!c({actual:n,possible:Number.isInteger})||e&&!c({actual:e,possible:{ignore:["comments","blankLines"]}}))return;let r=s.source.input.css.split(/\r\n|\n/),i=r.length;if(C(r)&&i--,e&&(g(e.ignore,"blankLines")&&(i-=B(r)),g(e.ignore,"comments")&&(i-=V(s))),!(i<=n))return t.utils.report({message:L.expected(n,i),node:s,result:a,ruleName:l})};u.ruleName=l;u.messages=L;module.exports=t.createPlugin(l,u);
